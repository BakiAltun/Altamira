// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vimo.Infrastructure.Data.Library;

namespace Vimo.Infrastructure.Data.Library.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20210720193919_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vimo.ApplicationCore.Entities.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("InsertedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Sincere@april.biz",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 128, DateTimeKind.Unspecified).AddTicks(4990), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Leanne Graham",
                            Password = "956S2U6O",
                            Phone = "1-770-736-8031 x56442",
                            Username = "Bret",
                            WebSite = "hildegard.org"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Shanna@melissa.tv",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(8560), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ervin Howell",
                            Password = "UO22DKZO",
                            Phone = "010-692-6593 x09125",
                            Username = "Antonette",
                            WebSite = "anastasia.net"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Nathan@yesenia.net",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(8900), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Clementine Bauch",
                            Password = "1EWLM2NN",
                            Phone = "1-463-123-4447",
                            Username = "Samantha",
                            WebSite = "ramiro.info"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Julianne.OConner@kory.org",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(8950), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Patricia Lebsack",
                            Password = "VIGCDZQQ",
                            Phone = "493-170-9623 x156",
                            Username = "Karianne",
                            WebSite = "kale.biz"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Lucio_Hettinger@annie.ca",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(8980), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Chelsey Dietrich",
                            Password = "6DJ3FY3O",
                            Phone = "(254)954-1289",
                            Username = "Kamren",
                            WebSite = "demarco.info"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Karley_Dach@jasper.info",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(9030), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mrs. Dennis Schulist",
                            Password = "B7VCVKE4",
                            Phone = "1-477-935-8478 x6430",
                            Username = "Leopoldo_Corkery",
                            WebSite = "ola.org"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Telly.Hoeger@billy.biz",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(9060), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Kurtis Weissnat",
                            Password = "D7ZX5FSU",
                            Phone = "210.067.6132",
                            Username = "Elwyn.Skiles",
                            WebSite = "elvis.io"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Sherwood@rosamond.me",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(9100), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Nicholas Runolfsdottir V",
                            Password = "SEYPDD4A",
                            Phone = "586.493.6943 x140",
                            Username = "Maxime_Nienow",
                            WebSite = "jacynthe.com"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Chaim_McDermott@dana.io",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(9270), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Glenna Reichert",
                            Password = "PRN4Q89Z",
                            Phone = "(775)976-6794 x41206",
                            Username = "Delphine",
                            WebSite = "conrad.com"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Rey.Padberg@karina.biz",
                            InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 131, DateTimeKind.Unspecified).AddTicks(9310), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Clementina DuBuque",
                            Password = "QMT5LFUQ",
                            Phone = "024-648-3804",
                            Username = "Moriah.Stanton",
                            WebSite = "ambrose.net"
                        });
                });

            modelBuilder.Entity("Vimo.ApplicationCore.Entities.UserAggregate.User", b =>
                {
                    b.OwnsMany("Vimo.ApplicationCore.Entities.UserAggregate.UserAddress", "Addresses", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("GeoLat")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("GeoLng")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset>("InsertedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Suite")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset?>("UpdatedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Zipcode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("UserAddresses");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    Id = 1,
                                    City = "Gwenborough",
                                    GeoLat = "-37.3159",
                                    GeoLng = "81.1496",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(8430), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Kulas Light",
                                    Suite = "Apt. 556",
                                    Zipcode = "92998-3874"
                                },
                                new
                                {
                                    UserId = 2,
                                    Id = 2,
                                    City = "Wisokyburgh",
                                    GeoLat = "-43.9509",
                                    GeoLng = "-34.4618",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9900), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Victor Plains",
                                    Suite = "Suite 879",
                                    Zipcode = "90566-7771"
                                },
                                new
                                {
                                    UserId = 3,
                                    Id = 3,
                                    City = "McKenziehaven",
                                    GeoLat = "-68.6102",
                                    GeoLng = "-47.0653",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9910), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Douglas Extension",
                                    Suite = "Suite 847",
                                    Zipcode = "59590-4157"
                                },
                                new
                                {
                                    UserId = 4,
                                    Id = 4,
                                    City = "South Elvis",
                                    GeoLat = "29.4572",
                                    GeoLng = "-164.2990",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9920), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Hoeger Mall",
                                    Suite = "Apt. 692",
                                    Zipcode = "53919-4257"
                                },
                                new
                                {
                                    UserId = 5,
                                    Id = 5,
                                    City = "Roscoeview",
                                    GeoLat = "-31.8129",
                                    GeoLng = "62.5342",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9920), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Skiles Walks",
                                    Suite = "Suite 351",
                                    Zipcode = "33263"
                                },
                                new
                                {
                                    UserId = 6,
                                    Id = 6,
                                    City = "South Christy",
                                    GeoLat = "-71.4197",
                                    GeoLng = "71.7478",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9930), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Norberto Crossing",
                                    Suite = "Apt. 950",
                                    Zipcode = "23505-1337"
                                },
                                new
                                {
                                    UserId = 7,
                                    Id = 7,
                                    City = "Howemouth",
                                    GeoLat = "24.8918",
                                    GeoLng = "21.8984",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9940), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Rex Trail",
                                    Suite = "Suite 280",
                                    Zipcode = "58804-1099"
                                },
                                new
                                {
                                    UserId = 8,
                                    Id = 8,
                                    City = "Aliyaview",
                                    GeoLat = "-14.3990",
                                    GeoLng = "-120.7677",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9940), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Ellsworth Summit",
                                    Suite = "Suite 729",
                                    Zipcode = "45169"
                                },
                                new
                                {
                                    UserId = 9,
                                    Id = 9,
                                    City = "Bartholomebury",
                                    GeoLat = "24.6463",
                                    GeoLng = "-168.8889",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9940), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Dayna Park",
                                    Suite = "Suite 449",
                                    Zipcode = "76495-3109"
                                },
                                new
                                {
                                    UserId = 10,
                                    Id = 10,
                                    City = "Lebsackbury",
                                    GeoLat = "-38.2386",
                                    GeoLng = "57.2232",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 214, DateTimeKind.Unspecified).AddTicks(9950), new TimeSpan(0, 0, 0, 0, 0)),
                                    Street = "Kattie Turnpike",
                                    Suite = "Suite 198",
                                    Zipcode = "31428-2261"
                                });
                        });

                    b.OwnsMany("Vimo.ApplicationCore.Entities.UserAggregate.UserCompany", "Companies", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bs")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CatchPhrase")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset>("InsertedAt")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset?>("UpdatedAt")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("UserCompanies");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    Id = 11,
                                    Bs = "harness real-time e-markets",
                                    CatchPhrase = "Multi-layered client-server neural-net",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(3950), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Romaguera-Crona"
                                },
                                new
                                {
                                    UserId = 2,
                                    Id = 12,
                                    Bs = "synergize scalable supply-chains",
                                    CatchPhrase = "Proactive didactic contingency",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5080), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Deckow-Crist"
                                },
                                new
                                {
                                    UserId = 3,
                                    Id = 13,
                                    Bs = "e-enable strategic applications",
                                    CatchPhrase = "Face to face bifurcated interface",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5080), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Romaguera-Jacobson"
                                },
                                new
                                {
                                    UserId = 4,
                                    Id = 14,
                                    Bs = "transition cutting-edge web services",
                                    CatchPhrase = "Multi-tiered zero tolerance productivity",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5090), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Robel-Corkery"
                                },
                                new
                                {
                                    UserId = 5,
                                    Id = 15,
                                    Bs = "revolutionize end-to-end systems",
                                    CatchPhrase = "User-centric fault-tolerant solution",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5090), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Keebler LLC"
                                },
                                new
                                {
                                    UserId = 6,
                                    Id = 16,
                                    Bs = "e-enable innovative applications",
                                    CatchPhrase = "Synchronised bottom-line interface",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5100), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Considine-Lockman"
                                },
                                new
                                {
                                    UserId = 7,
                                    Id = 17,
                                    Bs = "generate enterprise e-tailers",
                                    CatchPhrase = "Configurable multimedia task-force",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5100), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Johns Group"
                                },
                                new
                                {
                                    UserId = 8,
                                    Id = 18,
                                    Bs = "e-enable extensible e-tailers",
                                    CatchPhrase = "Implemented secondary concept",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5110), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Abernathy Group"
                                },
                                new
                                {
                                    UserId = 9,
                                    Id = 19,
                                    Bs = "aggregate real-time technologies",
                                    CatchPhrase = "Switchable contextually-based project",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5110), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Yost and Sons"
                                },
                                new
                                {
                                    UserId = 10,
                                    Id = 20,
                                    Bs = "target end-to-end models",
                                    CatchPhrase = "Centralized empowering task-force",
                                    InsertedAt = new DateTimeOffset(new DateTime(2021, 7, 20, 19, 39, 19, 216, DateTimeKind.Unspecified).AddTicks(5110), new TimeSpan(0, 0, 0, 0, 0)),
                                    Name = "Hoeger LLC"
                                });
                        });

                    b.Navigation("Addresses");

                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
